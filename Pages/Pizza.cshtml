@page
@using RazorPagesPizza.Models
@* @using System.Web.Mvc.Html
@inherits System.Web.Mvc.WebViewPage<dynamic> *@
@model RazorPagesPizza.Pages.PizzaModel
@{
    @* ! ViewData["Title"] = "Pizza List"; *@
    ViewBag.Title = "Pizza List";
}

<h1>Pizza List 🍕</h1>
<form method="post" class="card p-3">
    
    <div class="row">
        @* *Displays a validation message for a single property on the model. *@
        <div asp-validation-summary="All"></div>
    </div>
    
    <div class="form-group mb-0 align-middle">
        <label asp-for="NewPizza.Name">Name</label>
        @* *It extends the standard HTML <input> element. 
           *It also uses an asp-for attribute to specify a PageModel property. *@
        <input type="text" asp-for="NewPizza.Name" class="mr-5">
        
        <label asp-for="NewPizza.Size">Size</label>
        <select asp-for="NewPizza.Size" asp-items="Html.GetEnumSelectList<PizzaSize>() class="mr-5"></select>
        
        <label asp-for="NewPizza.Price"></label>
        <input asp-for="NewPizza.Price" class="mr-5" />

        <label asp-for="NewPizza.IsGlutenFree">Gluten Free</label>
        <input type="checkbox" asp-for="NewPizza.IsGlutenFree" class="mr-5">

        <button class="btn btn-primary">Add</button>
    </div>
</form>

<table class="tablet mt-5">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Size</th>
            <th scope="col">Gluten Free</th>
            <th scope="col">Delete</th>
        </tr>
    </thead>
    
    @foreach (var pizza in Model.pizzas)
    {
        <tr>
            <td>@pizza.Name</td>
            <td>@($"{pizza.Price:C}")</td>
            <td>@Pizza.Size</td>
            <td>@Model.GlutenFreeText(Pizza)</td>
            <td>
                <form method="post" asp-page-handler="Delete" asp-route-id="@Pizza.Id">
                    <button class="btn btn-danger">Delete</button>
                </form>
            </td>
        </tr>
    }
</table>

@section Scripts {
    @* *This markup uses the Partial Tag Helper to asynchronously render a partial view: *@
    @* *The Partial Tag Helper's name attribute accepts the partial view name without the file extension.
       *A view discovery process locates the partial view in the project. *@
    <partial name="_ValidationScriptsPartial" />
    
    @* *HTML Helper syntax:
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} *@
}